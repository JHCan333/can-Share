{"version":3,"sources":["markDownFile sync /^/.//.*/.md$","markDownFile/browserRender.md","markDownFile/differencesOfThese.md","markDownFile/ie6下css碰到的坑.md","markDownFile/nrmOrder.md","markDownFile/nvmOrder.md","markDownFile/确认点击的位置是否是当前组件.md","router/menuList.js","pages/documents/markDownRender.js","router/index.js","pages/home.js","serviceWorker.js","index.js"],"names":["map","./browserRender.md","./differencesOfThese.md","./ie6下css碰到的坑.md","./nrmOrder.md","./nvmOrder.md","./确认点击的位置是否是当前组件.md","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","menuList","path","name","Game","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_html","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","hljs","highlightAuto","value","_this2","markDownName","mdFile","require","concat","console","log","fetch","then","res","text","val","setState","react_default","a","createElement","dangerouslySetInnerHTML","__html","React","Component","routeList","seg","idx","react_router","key","render","markDownRender","history","createHashHistory","Home","handleClick","bind","assertThisInitialized","push","onClick","RouteList","Boolean","window","location","hostname","match","ReactDOM","home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4b9b717.chunk.js","sourcesContent":["var map = {\n\t\"./browserRender.md\": 215,\n\t\"./differencesOfThese.md\": 216,\n\t\"./ie6下css碰到的坑.md\": 217,\n\t\"./nrmOrder.md\": 218,\n\t\"./nvmOrder.md\": 219,\n\t\"./确认点击的位置是否是当前组件.md\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 214;","module.exports = __webpack_public_path__ + \"static/media/browserRender.331b3940.md\";","module.exports = __webpack_public_path__ + \"static/media/differencesOfThese.1354f607.md\";","module.exports = __webpack_public_path__ + \"static/media/ie6下css碰到的坑.1e6ab65a.md\";","module.exports = __webpack_public_path__ + \"static/media/nrmOrder.8ba80fa4.md\";","module.exports = __webpack_public_path__ + \"static/media/nvmOrder.7f0ac758.md\";","module.exports = __webpack_public_path__ + \"static/media/确认点击的位置是否是当前组件.045307f4.md\";","/**\n * @author 靳宏灿\n * @date 2019/5/21\n * @time 上午9:41\n * @Description: 路由列表\n */\nconst menuList = [\n    {path:'/browserRender',name:'browserRender'},\n    {path:'/nrmOrder',name:'nrmOrder'}\n]\n\nexport default menuList","import React from 'react'\nimport marked from 'marked'\nimport hljs from 'highlight.js';\nimport $ from 'jquery'\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {_html:'Welcome !'};\n    }\n    componentWillMount() {\n        // marked相关配置\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: true,\n            pedantic: false,\n            sanitize: true,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code) {\n                return hljs.highlightAuto(code).value;\n            },\n        });\n\n    }\n    componentDidMount() {\n        let markDownName = this.props.markDownName || 'nrmOrder'\n        let mdFile = require(`../../markDownFile/${markDownName}.md`)\n        console.log('mdFile',mdFile)\n        fetch(`./markDownFile/${markDownName}.md`).then((res)=>{\n            return res.text()\n        }).then((val)=>{\n            this.setState({_html:val})\n        })\n    }\n    render () {\n        return (\n            <div dangerouslySetInnerHTML={{__html: marked(this.state._html)}}></div>\n        )\n    }\n}\n\nexport default Game\n","/**\n * @author 靳宏灿\n * @date 2019/5/21\n * @time 上午10:14\n * @Description: 导出路由list\n*/\nimport menuList from './menuList'\nimport MarkDownRender from '../pages/documents/markDownRender'\nimport React from 'react'\nimport {Route } from 'react-router'\n\nlet routeList = menuList.map(function(seg,idx){\n    return <Route path={seg.path} key={idx} render={props => (<MarkDownRender markDownName={seg.name}/>)}/>\n})\n\nexport default routeList","import React from 'react'\nimport $ from 'jquery'\nimport RouteList from '../router'\nimport { Router } from 'react-router'\nimport {createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nclass Home extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {_html: 'Welcome !'}\n    }\n    handleClick(path){\n        history.push( path)\n    }\n    render () {\n        return (\n            <div>\n                <div onClick={()=>{this.handleClick('/nrmOrder')}}>nrmOrder</div>\n                <div onClick={()=>{this.handleClick('/browserRender')}}>browserRender</div>\n                <Router history={history}>\n                    {RouteList}\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}